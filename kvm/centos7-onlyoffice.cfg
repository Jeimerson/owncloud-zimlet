#platform=x86, AMD64, or Intel EM64T
#version=DEVEL
# Install OS instead of upgrade
install
# Keyboard layouts
keyboard 'us'# Reboot after installation
reboot
# Root password
rootpw foobar
# System timezone
timezone Europe/Amsterdam
# Use network installation

# Add only officially recommended repositories:
# https://wiki.centos.org/AdditionalResources/Repositories 

url --url="http://mirror.cisp.com/CentOS/7/os/x86_64/"
repo --name=epel --baseurl=https://download.fedoraproject.org/pub/epel/7/x86_64/
repo --name=nginx --baseurl=https://nginx.org/packages/centos/7/x86_64/

# System language
lang en_US
# Firewall configuration
firewall --enabled --ssh
# Network information
network  --bootproto=dhcp --device=eth0
# System authorization information
auth  --useshadow  --passalgo=sha512
# Use graphical install
graphical
firstboot --disable
# SELinux configuration
selinux --enforcing
# Do not configure the X Window System
skipx

# System bootloader configuration
bootloader --location=mbr
zerombr
clearpart --all --initlabel

# Disk partitioning information
part swap --asprimary --fstype="swap" --size=2200
part /boot --fstype=ext4 --size=500
part pv.01 --size=1 --grow
volgroup rootvg01 pv.01
logvol / --fstype ext4 --name=lv01 --vgname=rootvg01 --size=1 --grow

%packages
@base
@core
epel-release
chrony
git
policycoreutils-python
yum-cron
curl
openssl
redis
postgresql
postgresql-server
postgresql-contrib
rabbitmq-server
%end

%post
yum update -y
sed -i 's|^apply_updates = no|apply_updates = yes|' /etc/yum/yum-cron.conf

/usr/bin/firewall-cmd --zone=public --add-port=443/tcp --permanent
/usr/bin/firewall-cmd --reload

cat > /etc/yum.repos.d/nginx.repo << EOF
[nginx]
name=Repository for nginx
baseurl=https://nginx.org/packages/centos/7/x86_64/
enabled=1
gpgcheck=0
EOF

curl -sL https://rpm.nodesource.com/setup_6.x | sudo bash -

postgresql-setup initdb
sed -i 's|ident$|trust|' /var/lib/pgsql/data/pg_hba.conf
systemctl enable postgresql
systemctl restart postgresql
rpm --import "http://keyserver.ubuntu.com/pks/lookup?op=get&search=0x8320CA65CB2DE8E5"

sudo -u postgres psql -c "CREATE DATABASE onlyoffice;"
sudo -u postgres psql -c "CREATE USER onlyoffice WITH password 'onlyoffice';"
sudo -u postgres psql -c "GRANT ALL privileges ON DATABASE onlyoffice TO onlyoffice;"




mkdir -p /etc/ssl/certs/private/
cd /etc/ssl/certs/private/
openssl genrsa -out onlyoffice.key 2048
openssl req -new -key onlyoffice.key -out onlyoffice.csr -subj "/C=NL/ST=Zuid-Holland/L=Den Haag/O=IT/CN=www.example.com" 
openssl x509 -req -days 3650 -in onlyoffice.csr -signkey onlyoffice.key -out onlyoffice.crt

cat > /etc/nginx/conf.d/onlyoffice-ssl.conf << EOF
server {
        listen  443;
        server_name  localhost;
        access_log  /var/log/nginx/localhost.access.log;
        error_log   /var/log/nginx/localhost.error.log;

        ssl on;
        ssl_certificate /etc/ssl/certs/private/onlyoffice.crt;
        ssl_certificate_key /etc/ssl/certs/private/onlyoffice.key;

        location / {
           proxy_pass http://127.0.0.1/;
        }
}
EOF

#manually run 
#mysql_secure_installation
#/var/www/onlyoffice/configure.sh

# owh this community server, does not edit documents
# see https://github.com/ONLYOFFICE/CommunityServer   << is what this kickstart does
# see https://github.com/ONLYOFFICE/DocumentServer  << is what we need
# redo http://helpcenter.onlyoffice.com/server/linux/document/linux-installation-centos.aspx

%end
