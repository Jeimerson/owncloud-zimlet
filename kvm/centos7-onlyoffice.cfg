#platform=x86, AMD64, or Intel EM64T
#version=DEVEL
# Install OS instead of upgrade
install
# Keyboard layouts
keyboard 'us'# Reboot after installation
reboot
# Root password
rootpw foobar
# System timezone
timezone Europe/Amsterdam
# Use network installation

# Add only officially recommended repositories:
# https://wiki.centos.org/AdditionalResources/Repositories 

url --url="http://mirror.cisp.com/CentOS/7/os/x86_64/"
repo --name=epel --baseurl=https://download.fedoraproject.org/pub/epel/7/x86_64/
repo --name=nginx --baseurl=https://nginx.org/packages/centos/7/x86_64/

# System language
lang en_US
# Firewall configuration
firewall --enabled --http --ssh
# Network information
network  --bootproto=dhcp --device=eth0
# System authorization information
auth  --useshadow  --passalgo=sha512
# Use graphical install
graphical
firstboot --disable
# SELinux configuration
selinux --permissive
# Do not configure the X Window System
skipx

# System bootloader configuration
bootloader --location=mbr
zerombr
clearpart --all --initlabel

# Disk partitioning information
part swap --asprimary --fstype="swap" --size=2200
part /boot --fstype=ext4 --size=500
part pv.01 --size=1 --grow
volgroup rootvg01 pv.01
logvol / --fstype ext4 --name=lv01 --vgname=rootvg01 --size=1 --grow

%packages
@base
@core
epel-release
chrony
git
yum-cron
curl
openssl
docker
nginx
%end

%post
yum update -y
sed -i 's|^apply_updates = no|apply_updates = yes|' /etc/yum/yum-cron.conf

/usr/bin/firewall-cmd --zone=public --add-service=http --permanent
/usr/bin/firewall-cmd --zone=public --add-service=https --permanent
/usr/bin/firewall-cmd --reload


cat > /etc/yum.repos.d/nginx.repo << EOF
[nginx]
name=Repository for nginx
baseurl=https://nginx.org/packages/centos/7/x86_64/
enabled=1
gpgcheck=0
EOF


systemctl start docker
systemctl enable docker

#docker run -i -t -d -p 80:80 --restart=always onlyoffice/documentserver
docker run -i -t -d -p 80:80 --restart=always \
    -v /app/onlyoffice/DocumentServer/cache:/var/lib/onlyoffice/documentserver/App_Data/cache/files  \
    -v /app/onlyoffice/DocumentServer/logs:/var/log/onlyoffice  \
    -v /app/onlyoffice/DocumentServer/data:/var/www/onlyoffice/Data  onlyoffice/documentserver


systemctl enable nginx

mkdir -p /etc/ssl/certs/private/
cd /etc/ssl/certs/private/
openssl genrsa -out onlyoffice.key 2048
openssl req -new -key onlyoffice.key -out onlyoffice.csr -subj "/C=NL/ST=Zuid-Holland/L=Den Haag/O=IT/CN=www.example.com" 
openssl x509 -req -days 3650 -in onlyoffice.csr -signkey onlyoffice.key -out onlyoffice.crt

cat > /etc/nginx/conf.d/onlyoffice-ssl.conf << EOF
server {
        listen  443;
        server_name  localhost;
        access_log  /var/log/nginx/localhost.access.log;
        error_log   /var/log/nginx/localhost.error.log;

        ssl on;
        ssl_certificate /etc/ssl/certs/private/onlyoffice.crt;
        ssl_certificate_key /etc/ssl/certs/private/onlyoffice.key;

        location / {
           proxy_pass http://127.0.0.1/;
        }
}
EOF

# listens on port 80
rm -f /etc/nginx/conf.d/default.conf

systemctl restart nginx

# mkdir /var/www/html/logs
# disable selinux
# write access on logs
# install php-xml

%end
